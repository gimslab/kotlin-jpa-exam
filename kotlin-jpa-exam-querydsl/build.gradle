plugins {
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.21'
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'org.jetbrains.kotlin.jvm' version '1.3.21'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.gimslab'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

	annotationProcessor(
			"com.querydsl:querydsl-apt:${rootProject.ext.querydslVersion}:jpa",
//			"com.querydsl:querydsl-jpa:${rootProject.ext.querydslVersion}",
			"org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final",
			"javax.annotation:javax.annotation-api:1.3.2",
			"org.projectlombok:lombok"
	)
	implementation "com.querydsl:querydsl-jpa:${rootProject.ext.querydslVersion}"

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

ext {
	generated = 'src/main/generated'
}

sourceSets {
	main.java.srcDirs += [ generated ]
}

//idea {
//	module {
//		generatedSourceDirs += file(generated)
//	}
//}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}
